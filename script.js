// C√°c bi·∫øn to√†n c·ª•c
let countdownInterval;
let wishTimerInterval;
let fireworksInterval;
let starsInterval;
let typingInterval;
let music = new Audio('happybirthday.mp3');
let song = new Audio('song.mp3');

// Ph·∫ßn t·ª≠ DOM
const countdownScreen = document.getElementById('countdown-screen');
const dateDisplay = document.getElementById('date-display'); 
const birthdayScreen = document.getElementById('birthday-screen');
const wishScreen = document.getElementById('wish-screen');
const cardScreen = document.getElementById('card-screen');
const countdownElement = document.getElementById('countdown');
const wishTimerElement = document.getElementById('wish-timer');
const cardElement = document.querySelector('.card');
const messageElement = document.getElementById('message');
const typingSound = document.getElementById('typing-sound');
const candleCountDisplay = document.getElementById('candleCount');

// Tin nh·∫Øn trong thi·ªáp
const birthdayMessage = `Ch√∫c m·ª´ng sinh nh·∫≠t em iu nhaaaa üíó\n\n Cu·ªëi c√πng c≈©ng ƒë√£ ƒë·∫øn ng√†y 9/9/2025 r·ªìi ƒë√≥, th·∫•y nhanh v√¥ c√πng ch∆∞a. ƒê·∫øn l√∫c kh√©p l·∫°i tu·ªïi 19 qu√° nhi·ªÅu s·ª± ki·ªán, m·ªü ra tu·ªïi 20 - kh·ªüi ƒë·∫ßu m·ªõi. Xong b√¢y gi·ªù b·∫±ng tu·ªïi anh r·ªìi ƒë√≥, l√™n ƒë·∫ßu 2 c√°i l√† th·∫•y kh√°c bi·ªát h·∫≥n ha.\n\n Mong em h√£y lu√¥n gi·ªØ g√¨n s·ª©c kho·∫ª, ƒëi ƒë∆∞·ªùng an to√†n, v·ªÅ nh√† c·∫©n th·∫≠n, v√† c√≥ nh·ªØng gi·∫•c ng·ªß ngon!\n\n Mong cu·ªôc ƒë·ªùi ƒë·ªëi x·ª≠ nh·∫π nh√†ng v·ªõi em, mong nh·ªØng ∆∞·ªõc mu·ªën c·ªßa em d√π b·∫•t k·ªÉ nh∆∞ n√†o c≈©ng s·∫Ω d·∫ßn d·∫ßn th√†nh hi·ªán th·ª±c.\n\nY√™u em, Ho√†ng Mai Chi!`;

// Thi·∫øt l·∫≠p th·ªùi gian ƒë·∫øm ng∆∞·ª£c
const targetDate = new Date('2025-09-09T00:00:00');


function startCountdown() {
    if (countdownInterval) {
        clearInterval(countdownInterval);
    }
    
    let currentTime = new Date('2025-09-08T23:59:57');
    dateDisplay.textContent = '8/9/2025';
    createStars();

    countdownInterval = setInterval(() => {
        // C·∫≠p nh·∫≠t th·ªùi gian th·ª±c m·ªói gi√¢y
        currentTime = new Date(currentTime.getTime() + 1000);
        
        const h = currentTime.getHours();
        const m = currentTime.getMinutes();
        const s = currentTime.getSeconds();

        countdownElement.textContent = `${formatTime(h)}:${formatTime(m)}:${formatTime(s)}`;

        if (h === 0 && m === 0 && s === 0) {
            dateDisplay.textContent = '9/9/2025';
            clearInterval(countdownInterval);
            showBirthdayCake();
            return;
        }
    }, 1000);
}

// H√†m hi·ªÉn th·ªã n√∫t play n·∫øu t·ª± ƒë·ªông ph√°t b·ªã ch·∫∑n
function showPlayButton() {
    // Ki·ªÉm tra n·∫øu n√∫t ƒë√£ t·ªìn t·∫°i th√¨ kh√¥ng t·∫°o l·∫°i
    if (document.getElementById('playButton')) {
        return;
    }
    
    const playButton = document.createElement('button');
    playButton.id = 'playButton'; // Th√™m ID ƒë·ªÉ ki·ªÉm tra
    playButton.textContent = ' üëÜüèª ';
    playButton.style.fontFamily = '"Lora", serif';
    playButton.style.fontSize = '50px';
    playButton.style.position = 'absolute';
    playButton.style.top = '80%';
    playButton.style.padding = '10px 15px';
    playButton.style.backgroundColor = '#d7e7f3ff';
    playButton.style.color = '#5bc7f6';
    playButton.style.border = '#24aae4ff 10px solid';
    playButton.style.borderRadius = '30px';
    playButton.style.cursor = 'pointer';
    playButton.style.zIndex = '1000';
    
    document.body.appendChild(playButton);

    playButton.addEventListener('click', () => {
        // X√≥a n√∫t sau khi click
        playButton.remove();
        // B·∫Øt ƒë·∫ßu countdown
        startCountdown();
    });
}

// ƒê·ªãnh d·∫°ng th·ªùi gian
function formatTime(time) {
    return time < 10 ? `0${time}` : time;
}

// ----------------- N·∫øn -----------------
document.addEventListener("DOMContentLoaded", function () {
    const cake = document.querySelector(".cake");
    let candles = [];
    let audioContext, analyser, microphone;

    function updateCandleCount() {
        const activeCandles = candles.filter(
            (candle) => !candle.classList.contains("out")
        ).length;
        candleCountDisplay.textContent = activeCandles;

        if (activeCandles >= 9) {
            document.getElementById("candleReminder").textContent = "√¥i √¥i ƒë·ªß n·∫øn r√πi, d·ª´ng l·∫°i th·ªïi thui n√†o";
            document.getElementById("candleReminder").style.color = "#1cee2eff";
            document.getElementById("candleCount").style.color = "#1cee2eff";
        } else {
            document.getElementById("candleReminder").textContent = "em c·∫Øm 9 c√°i n·∫øn xong th·ªïi h·∫øc s·ª©c nhoa!";
            document.getElementById("candleReminder").style.color = "#69bce2";
        }

    }

    function addCandle(left, top) {
        const candle = document.createElement("div");
        candle.className = "candle";
        candle.style.left = left + "px";
        candle.style.top = top + "px";

        const flame = document.createElement("div");
        flame.className = "flame";
        candle.appendChild(flame);

        cake.appendChild(candle);
        candles.push(candle);
        updateCandleCount();
    }

    // Click v√†o b√°nh ƒë·ªÉ th√™m n·∫øn
    cake.addEventListener("click", function (event) {
        const rect = cake.getBoundingClientRect();
        const left = event.clientX - rect.left;
        const top = event.clientY - rect.top;
        addCandle(left, top);
    });

    function isBlowing() {
        const bufferLength = analyser.frequencyBinCount;
        const dataArray = new Uint8Array(bufferLength);
        analyser.getByteFrequencyData(dataArray);

        let sum = 0;
        for (let i = 0; i < bufferLength; i++) {
            sum += dataArray[i];
        }
        let average = sum / bufferLength;

        return average > 50; // ƒë·ªô nh·∫°y
    }

    function blowOutCandles() {
    let blownOut = 0;

    // ch·ªâ th·ªïi n·∫øu c√≥ ƒë·ªß 9 ng·ªçn n·∫øn
    if (candles.length >= 9 && candles.some((c) => !c.classList.contains("out"))) {
        if (isBlowing()) {
            candles.forEach((candle) => {
                if (!candle.classList.contains("out") && Math.random() > 0.5) {
                    candle.classList.add("out");
                    blownOut++;
                }
            });
        }

        if (blownOut > 0) updateCandleCount();

        // khi t·∫•t c·∫£ n·∫øn t·∫Øt
        if (candles.every((c) => c.classList.contains("out"))) {
            setTimeout(function() {
                startWish();
            }, 500);
        }
    }
}

    if (navigator.mediaDevices.getUserMedia) {
        navigator.mediaDevices
            .getUserMedia({ audio: true })
            .then(function (stream) {
                audioContext = new (window.AudioContext || window.webkitAudioContext)();
                analyser = audioContext.createAnalyser();
                microphone = audioContext.createMediaStreamSource(stream);
                microphone.connect(analyser);
                analyser.fftSize = 256;
                setInterval(blowOutCandles, 200);
            })
            .catch(function (err) {
                console.log("Unable to access microphone: " + err);
            });
    }
});

// ----------------- Birthday Cake -----------------
function showBirthdayCake() {
    // Th√™m hi·ªáu ·ª©ng l√†m t·ªëi m√†n h√¨nh
    countdownScreen.classList.add('screen-darken');
    
    // Sau 1 gi√¢y, ·∫©n m√†n h√¨nh ƒë·∫øm ng∆∞·ª£c v√† hi·ªán m√†n h√¨nh sinh nh·∫≠t
    setTimeout(() => {
        countdownScreen.style.opacity = '0';
        countdownScreen.style.display = 'none';
        
        // Hi·ªÉn th·ªã m√†n h√¨nh sinh nh·∫≠t v·ªõi hi·ªáu ·ª©ng s√°ng d·∫ßn
        birthdayScreen.style.opacity = '1';
        birthdayScreen.style.pointerEvents = 'auto';
        birthdayScreen.classList.add('screen-brighten');

        birthdayScreen.style.display = 'flex';

    music.play().catch(() => {
        document.body.addEventListener("click", () => music.play(), { once: true });
    });

        createFireworks();
        clearInterval(starsInterval);
        
    }, 3000);
}


// ----------------- Fireworks -----------------
function createFireworks() {
    fireworksInterval = setInterval(() => {
        createFirework();
    }, 300);
}

function createFirework() {
    const firework = document.createElement('div');
    firework.className = 'firework';
    firework.innerHTML = 'üíó'; 
    firework.style.fontSize = '50px'; // K√≠ch th∆∞·ªõc c·ªßa ph√°o hoa

    const x = Math.random() * window.innerWidth;
    const y = Math.random() * window.innerHeight;

    firework.style.left = `${x}px`;
    firework.style.top = `${y}px`;

    const angle = Math.random() * Math.PI * 2;
    const distance = 100 + Math.random() * 200;
    const xOffset = Math.cos(angle) * distance;
    const yOffset = Math.sin(angle) * distance;

    firework.style.setProperty('--x', `${xOffset}px`);
    firework.style.setProperty('--y', `${yOffset}px`);
    firework.style.animation = `firework-animation 3s forwards`;

    document.body.appendChild(firework);

    setTimeout(() => firework.remove(), 1000);
}

function createStars() {
    starsInterval = setInterval(() => {
        createStar();
    }, 300);
}

function createStar() {
    const firework = document.createElement('div');
    firework.className = 'firework';
    firework.innerHTML = '‚≠ê'; 
    firework.style.fontSize = '50px'; // K√≠ch th∆∞·ªõc c·ªßa ph√°o hoa

    const x = Math.random() * window.innerWidth;
    const y = Math.random() * window.innerHeight;

    firework.style.left = `${x}px`;
    firework.style.top = `${y}px`;

    const angle = Math.random() * Math.PI * 2;
    const distance = 9999 + Math.random() * 500;
    const xOffset = Math.cos(angle) * distance;
    const yOffset = Math.sin(angle) * distance;

    firework.style.setProperty('--x', `${xOffset}px`);
    firework.style.setProperty('--y', `${yOffset}px`);
    firework.style.animation = `firework-animation 90s forwards`;

    document.body.appendChild(firework);

    setTimeout(() => firework.remove(), 1000);
}
// ----------------- Wish countdown -----------------
function startWish() {
    birthdayScreen.style.display = 'none';
    wishScreen.style.display = 'flex';


    clearInterval(fireworksInterval);

    let timeLeft = 60; // 60 gi√¢y
    wishTimerElement.textContent = timeLeft;

    wishTimerInterval = setInterval(() => {
        timeLeft--;
        wishTimerElement.textContent = timeLeft;

        if (timeLeft <= 0) {
            clearInterval(wishTimerInterval);
            showCard();
            createStars();
        }
    }, 1000);
}

// ----------------- Card -----------------
function showCard() {
    wishScreen.style.display = 'none';
    cardScreen.style.display = 'flex';
    music.pause();
    music.currentTime = 0;
    song.play();

}

// X·ª≠ l√Ω m·ªü thi·ªáp
cardElement.addEventListener('click', () => {
    if (!cardElement.classList.contains('open')) {
        cardElement.classList.add('open');
        typeMessage();
    }
});

// Hi·ªáu ·ª©ng g√µ ch·ªØ
function typeMessage() {
    let i = 0;
    messageElement.innerHTML = '';
    typingSound.play();

    typingInterval = setInterval(() => {
        if (i < birthdayMessage.length) {
            messageElement.innerHTML += (birthdayMessage[i] === '\n') ? '<br>' : birthdayMessage[i];
            i++;
        } else {
            clearInterval(typingInterval);
            typingSound.pause();
        }
    }, 100);
}


// ----------------- Start -----------------
window.addEventListener('load', showPlayButton);
